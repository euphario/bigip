{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.2.0.0",
  "parameters": {
    "adminUsername": {
      "metadata": {
        "description": "Admin username used for accessing VM"
      },
      "type": "string"
    },
    "sshKey": {
      "metadata": {
        "description": "Supply ssh public key you wish to use to connect to the virtual machine."
      },
      "type": "string"
    },
    "instanceType": {
      "allowedValues": ["Standard_DS2_v2"],
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "Instance size of the Virtual Machine."
      },
      "type": "string"
    },
    "subnetId": {
      "metadata": {
        "description": "Existing subnet resource ID which will be used for getting vm/app private address"
      },
      "type": "string"
    },
    "runtimeConfig": {
      "metadata": {
        "description": "Url to bigip-runtime-init configuration file or json string to use for configuration file."
      },
      "type": "string"
    },
    "nsgId": {
      "defaultValue": "",
      "metadata": {
        "description": "Existing subnet NSG ID which will be applied to app VM network interface."
      },
      "type": "string"
    },
    "appContainer": {
      "defaultValue": "f5devcentral/f5-demo-app:1.0.1",
      "metadata": {
        "description": "Docker container to use when deploying the example application."
      },
      "type": "string"
    },
    "cloudInitDeliveryLocation": {
      "defaultValue": "",
      "metadata": {
        "description": "URI to cloud init file used for customizing VM"
      },
      "type": "string"
    },
    "image": {
      "defaultValue": "f5-networks:f5-big-ip-best:f5-bigip-virtual-edition-25m-best-hourly:15.1.200000",
      "metadata": {
        "description": "2 formats accepted. URN of the image to use in Azure marketplace or id of custom image. Example URN value: f5-networks:f5-big-ip-byol:f5-big-ltm-2slot-byol:15.1.002000. You can find the URNs of F5 marketplace images in the README for this template or by running the command: az vm image list --output yaml --publisher f5-networks --all. See https://clouddocs.f5.com/cloud/public/v1/azure/Azure_download.html for information on creating custom bigip image."
      },
      "type": "string"
    },
    "tagValues": {
      "defaultValue": {
        "application": "APP",
        "cost": "COST",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER"
      },
      "metadata": {
        "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
      },
      "type": "object"
    }
  },
  "variables": {
    "apiVersion": "2015-06-15",
    "cloudInit": "[concat('#include\n',parameters('cloudInitDeliveryLocation'))]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "networkSecurityGroup": {
      "id": "[parameters('nsgId')]"
    },
    "runtimeInitUrl": "https://cdn.f5.com/product/cloudsolutions/f5-bigip-runtime-init/v1.1.0/dist/f5-bigip-runtime-init-1.1.0-1.gz.run",
    "storageAccountType": "Standard_LRS",
    "customData": "[base64(concat('#!/bin/bash -x\n\n# Log to local file and serial console\nmkdir -p /var/log/cloud /config/cloud /var/config/rest/downloads\nLOG_FILE=/var/log/cloud/startup-script.log\ntouch ${LOG_FILE}\nnpipe=/tmp/$$.tmp\ntrap \"rm -f $npipe\" EXIT\nmknod $npipe p\ntee <$npipe -a ${LOG_FILE} /dev/ttyS0 &\nexec 1>&-\nexec 1>$npipe\nexec 2>&1\n\necho \"$(date  +\"%Y-%m-%dT%H:%M:%S.%3NZ\") : Starting Custom Script\"\n# Optional optimizations required as early in boot as possible before mcpd starts\n/usr/bin/setdb provision.extramb 500\n/usr/bin/setdb restjavad.useextramb true\n\n# VARS FROM TEMPLATE\nPACKAGE_URL=', variables('singleQuote'), variables('runtimeInitUrl'), variables('singleQuote'), '\nRUNTIME_CONFIG=',  variables('singleQuote'), parameters('runtimeConfig'), variables('singleQuote'), '\n\n# Render or download f5-bigip-runtime-init config\nif [[ \"${RUNTIME_CONFIG}\" =~ ^http.* ]]; then\n  curl -sfv --retry 60 --connect-timeout 5 -L \"${RUNTIME_CONFIG}\" -o /config/cloud/runtime-init.conf\nelse\n  printf ', variables('singleQuote'), '%s\\n', variables('singleQuote'), ' \"${RUNTIME_CONFIG}\" | jq . > /config/cloud/runtime-init.conf\nfi\n\n# Download and install f5-bigip-runtime-init package\nif [[ ! -s \"/var/config/rest/downloads/${PACKAGE_URL##*/}\" ]]; then\n  for i in {1..30}; do\n    curl -fv --retry 1 --connect-timeout 5 -L \"${PACKAGE_URL}\" -o \"/var/config/rest/downloads/${PACKAGE_URL##*/}\" && break || sleep 10\n  done\nfi\nbash \"/var/config/rest/downloads/${PACKAGE_URL##*/}\" -- ', variables('singleQuote'), '--cloud azure', variables('singleQuote'), '\n\n# Run\nf5-bigip-runtime-init --config-file /config/cloud/runtime-init.conf\n'))]",
    "singleQuote": "'",
    "storageName": "[concat(uniqueString(resourceGroup().name, resourceGroup().id, deployment().name), 'data000')]",
    "vmName": "[concat(resourceGroup().name, '-app')]",
    "useCustomImage": "[contains(tolower(parameters('image')), 'microsoft.compute')]",
    "skuToUse": "[if(variables('useCustomImage'), json('null'), variables('image')[2])]",
    "offerToUse": "[if(variables('useCustomImage'), json('null'), variables('image')[1])]",
    "versionToUse": "[if(variables('useCustomImage'), json('null'), variables('image')[3])]",
    "image": "[if(variables('useCustomImage'), parameters('image'), split(parameters('image'), ':'))]",
    "imagePlan": {
      "name": "[variables('skuToUse')]",
      "product": "[variables('offerToUse')]",
      "publisher": "f5-networks"
    },
    "imageReference": {
      "offer": "[variables('offerToUse')]",
      "publisher": "f5-networks",
      "sku": "[variables('skuToUse')]",
      "version": "[variables('versionToUse')]"
    },
    "storageProfileArray": {
      "customImage": {
        "imageReference": {
          "id": "[variables('image')]"
        }
      },
      "platformImage": {
        "imageReference": "[variables('imageReference')]",
        "osDisk": {
          "createOption": "FromImage"
        }
      }
    }
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('storageName')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "name": "[variables('nicName')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('vmName'), '-ipconfig1')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[parameters('subnetId')]"
              }
            }
          }
        ],
        "networkSecurityGroup": "[if(empty(parameters('nsgId')), json('null'), variables('networkSecurityGroup'))]"
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Network/networkInterfaces"
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]"
      ],
      "plan": "[if(variables('useCustomImage'), json('null'), variables('imagePlan'))]",
      "location": "[resourceGroup().location]",
      "name": "[variables('vmName')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('instanceType')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "osProfile": {
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshKey')]",
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]"
                }
              ]
            }
          },
          "computerName": "[variables('vmName')]",
          "customData": "[base64(variables('cloudInit'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        },
        "storageProfile": "[if(variables('useCustomImage'), variables('storageProfileArray').customImage, variables('storageProfileArray').platformImage)]"
      },
      "tags": "[if(empty(parameters('tagValues')), json('null'), parameters('tagValues'))]",
      "type": "Microsoft.Compute/virtualMachines"
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "condition": "[not(empty(parameters('appContainer')))]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('vmName'),'/vmInit')]",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "settings": {
          "commandToExecute": "[concat('echo -e ', variables('customData'), ' > /var/lib/waagent/customData; bash -c \"base64 -d /var/lib/waagent/customData | bash\"')]"
        },
        "type": "CustomScript",
        "typeHandlerVersion": "2.0"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions"
    }
  ],
  "outputs": {
    "appIp": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', variables('nicName')),'2016-09-01').ipConfigurations[0].properties.privateIPAddress]"
    }
  }
}
