{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.2.0.0",
  "parameters": {
    "templateBaseUrl": {
      "defaultValue": "https://cdn.f5.com/product/cloudsolutions/",
      "metadata": {
        "description": "The publicly accessible URL where the linked ARM templates are located."
      },
      "type": "string"
    },
    "artifactLocation": {
      "defaultValue": "[concat('f5-azure-arm-templates-v2/v', deployment().properties.template.contentVersion, '/examples/')]",
      "metadata": {
        "description": "The directory, relative to the templateBaseUrl, where the modules folder is located."
      },
      "type": "string"
    },
    "sshKey": {
      "metadata": {
        "description": "Supply ssh public key you wish to use to connect to big-ip."
      },
      "type": "string"
    },
    "uniqueString": {
      "defaultValue": "",
      "metadata": {
        "description": "A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
      },
      "type": "string"
    },
    "bigipPrefix": {
      "defaultValue": "f5vm",
      "metadata": {
        "description": "A prefix that will be used to name template resources. Because some resources require globally unique names, we recommend using a unique value."
      },
      "type": "string"
    },
    "adminUsername": {
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      },
      "type": "string"
    },
    "adminPassword": {
      "defaultValue": "",
      "metadata": {
        "description": "The new password to be used for the admin user on the BIG-IP instances. This is required for creating the AZURE_PASSWORD secret referenced in the runtimeConfig template parameter."
      },
      "type": "securestring"
    },
    "kubernetesSubnet": {
      "defaultValue": "10.240.0.0/16",
      "metadata": {
        "description": "subnet of the SIP Kubernetes cluster"
      },
      "type": "string"
    },
    "restrictedSrcMgmtAddress": {
      "defaultValue": "*",
      "metadata": {
        "description": "When creating management security group, this field restricts management access to a specific network or address. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
      },
      "type": "string"
    },
    "restrictedSrcAddress": {
      "defaultValue": "*",
      "metadata": {
        "description": "When creating external security group, this field restricts access to a SIP traffic. Enter an IP address or address range in CIDR notation, or asterisk for all sources."
      },
      "type": "string"
    },
    "vnetAddressPrefix": {
      "defaultValue": "10.0",
      "metadata": {
        "description": "The start of the CIDR block the BIG-IP VEs use when creating the Vnet and subnets.  You MUST type just the first two octets of the /16 virtual network that will be created, for example '10.0', '10.100', 192.168'."
      },
      "type": "string"
    },
    "linkForBIGIPConfig": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to the base config to install on BIG-IP"
      },
      "type": "string"
    },
    "bigipAsClientCert": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to Certificate to install for connection from SIP systems to BIG-IP"
      },
      "type": "string"
    },
    "bigipAsClientKey": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to Certificate Key to install for connection from SIP systems to BIG-IP"
      },
      "type": "string"
    },
    "clientCA": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to CA to validate client certs from SIP systems to BIG-IP"
      },
      "type": "string"
    },
    "bigipAsServerCert": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to Certificate to install for connection from BIG-IP to SIP systems"
      },
      "type": "string"
    },
    "bigipAsServerKey": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to Certificate Key to install for connection from BIG-IP to SIP systems"
      },
      "type": "string"
    },
    "serverCA": {
      "defaultValue": "",
      "metadata": {
        "description": "Link to CA to validate client certs from SIP systems to BIG-IP"
      },
      "type": "string"
    },
    "tcpCluster": {
      "defaultValue": "10.240.0.245:25060",
      "metadata": {
        "description": "IP Address and port of the TCP SIP Cluster <IPAddress>:<Port>"
      },
      "type": "string"
    },
    "udpCluster": {
      "defaultValue": "10.240.0.247:25060",
      "metadata": {
        "description": "IP Address and port of the TCP SIP Cluster <IPAddress>:<Port>"
      },
      "type": "string"
    },
    "tagValues": {
      "defaultValue": {
        "application": "APP",
        "cost": "COST",
        "environment": "ENV",
        "group": "GROUP",
        "owner": "OWNER"
      },
      "metadata": {
        "description": "Default key/value resource tags will be added to the resources in this deployment, if you would like the values to be unique adjust them as needed for each key."
      },
      "type": "object"
    }
  },
  "variables": {
    "deploymentApiVersion": "2019-05-10",
    "contentVersion": "[deployment().properties.template.contentVersion]",
    "uniqueString": "[toLower(parameters('uniqueString'))]",
    "adminUsername": "azureuser",

    "assignManagedIdentity": "[not(empty(parameters('adminPassword')))]",
    "builtInRoleType": "Contributor",
    "customRoleAssignableScopes": [],
    "customRoleDescription": "",
    "customRoleName": "",
    "customRolePermissions": [],
    "keyVaultName": "[concat(variables('uniqueString'), 'sv')]",
    "keyVaultPermissionsKeys": ["get", "list"],
    "keyVaultPermissionsSecrets": ["get", "list"],
    "secretName": "mySecret",
    "userAssignedIdentityName": "[concat(variables('uniqueString'), '-secretIdentity')]",
    "virtualNetworkName": "[concat(variables('uniqueString'), '-vnet')]",
    "vnetAddressPrefix": "[parameters('vnetAddressPrefix')]",
    "nsg0": [
      {
        "destinationPortRanges": ["22", "443"],
        "sourceAddressPrefix": "[parameters('restrictedSrcMgmtAddress')]"
      }
    ],
    "nsg1": [
      {
        "destinationPortRanges": ["5060", "5061"],
        "sourceAddressPrefix": "[parameters('restrictedSrcAddress')]"
      }
    ],
    "nsg2": []
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "condition": "[variables('assignManagedIdentity')]",
      "name": "accessTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/access/access.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "builtInRoleType": { "value": "[variables('builtInRoleType')]" },
          "customRoleAssignableScopes": {
            "value": "[variables('customRoleAssignableScopes')]"
          },
          "customRoleDescription": {
            "value": "[variables('customRoleDescription')]"
          },
          "customRoleName": { "value": "[variables('customRoleName')]" },
          "customRolePermissions": {
            "value": "[variables('customRolePermissions')]"
          },
          "keyVaultName": { "value": "[variables('keyVaultName')]" },
          "keyVaultPermissionsKeys": {
            "value": "[variables('keyVaultPermissionsKeys')]"
          },
          "keyVaultPermissionsSecrets": {
            "value": "[variables('keyVaultPermissionsSecrets')]"
          },
          "secretName": { "value": "[variables('secretName')]" },
          "secretValue": { "value": "[parameters('adminPassword')]" },
          "userAssignedIdentityName": {
            "value": "[variables('userAssignedIdentityName')]"
          },
          "tagValues": { "value": "[parameters('tagValues')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "networkTemplate",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/network/network.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "numSubnets": { "value": 3 },
          "virtualNetworkName": {
            "value": "[variables('virtualNetworkName')]"
          },
          "nsg0": {
            "value": "[variables('nsg0')]"
          },
          "nsg1": {
            "value": "[variables('nsg1')]"
          },
          "nsg2": {
            "value": "[variables('nsg2')]"
          },
          "uniqueString": {
            "value": "[parameters('uniqueString')]"
          },
          "vnetAddressPrefix": { "value": "[variables('vnetAddressPrefix')]" },
          "tagValues": { "value": "[parameters('tagValues')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('deploymentApiVersion')]",
      "name": "bigipTemplate",
      "dependsOn": ["accessTemplate", "networkTemplate"],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('templateBaseUrl'), parameters('artifactLocation'), 'modules/bigip/bigip.json')]",
          "contentVersion": "[variables('contentVersion')]"
        },
        "parameters": {
          "adminUsername": { "value": "[parameters('adminUsername')]" },
          "adminPassword": { "value": "[parameters('adminPassword')]" },
          "sshKey": { "value": "[parameters('sshKey')]" },
          "dnsLabel": {
            "value": "[concat(parameters('uniqueString'), '-sip', '01')]"
          },
          "instanceName": {
            "value": "[concat(parameters('uniqueString'), '-', parameters('bigipPrefix'), '01')]"
          },
          "uniqueString": {
            "value": "[parameters('uniqueString')]"
          },
          "vnetAddressPrefix": { "value": "[variables('vnetAddressPrefix')]" },
          "bigipAsClientCert": { "value": "[parameters('bigipAsClientCert')]" },
          "bigipAsClientKey": { "value": "[parameters('bigipAsClientKey')]" },
          "clientCA": { "value": "[parameters('clientCA')]" },
          "bigipAsServerCert": { "value": "[parameters('bigipAsServerCert')]" },
          "bigipAsServerKey": { "value": "[parameters('bigipAsServerKey')]" },
          "serverCA": { "value": "[parameters('serverCA')]" },
          "kubernetesSubnet": { "value": "[parameters('kubernetesSubnet')]" },

          "linkForBIGIPConfig": {
            "value": "[parameters('linkForBIGIPConfig')]"
          },
          "tcpCluster": {
            "value": "[parameters('tcpCluster')]"
          },
          "udpCluster": {
            "value": "[parameters('udpCluster')]"
          },
          "tagValues": { "value": "[parameters('tagValues')]" }
        }
      }
    }
  ],
  "outputs": {
    "virtualNetworkId": {
      "type": "String",
      "value": "[reference('networkTemplate').outputs.virtualNetwork.value]"
    },
    "bigipUsername": {
      "type": "String",
      "value": "[variables('adminUsername')]"
    },
    "bigipPassword": {
      "condition": "[not(empty(parameters('adminPassword')))]",
      "type": "String",
      "value": "[parameters('adminPassword')]"
    }
  }
}
